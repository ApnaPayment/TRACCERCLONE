plugins {
    id "java"
    id "checkstyle"
    id 'distribution'
 //   id 'maven-publish'
    id 'application'
    id "com.google.protobuf" version "0.9.4"
    id "org.kordamp.gradle.project-enforcer" version "0.13.0"
    id "org.liquibase.gradle" version "2.2.0"
}

repositories {
    mavenCentral()
}

group = 'org.traccar'
version = '5.11'
sourceCompatibility = "11"
compileJava.options.encoding = "UTF-8"

checkstyle {
    toolVersion = "10.12.5"
    configFile = "gradle/checkstyle.xml" as File
    checkstyleTest.enabled = false
}

enforce {
    rule(enforcer.rules.EnforceBytecodeVersion) { r ->
        r.maxJdkVersion = "11"
    }
}

ext {
    guiceVersion = "7.0.0"
    jettyVersion = "11.0.19"
    jerseyVersion = "3.1.5"
    jacksonVersion = "2.15.3" // same version as jersey-media-json-jackson dependency
    protobufVersion = "3.25.2"
    jxlsVersion = "2.14.0"
    junitVersion = "5.10.1"
    javaMainClass = "org.traccar.Main"
}

application {
    mainClassName = javaMainClass
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }
}

dependencies {
    implementation "commons-codec:commons-codec:1.16.0"
    implementation "com.h2database:h2:2.2.224"
    implementation "com.mysql:mysql-connector-j:8.2.0"
    implementation "org.mariadb.jdbc:mariadb-java-client:3.3.2"
    implementation "org.postgresql:postgresql:42.7.1"
    implementation "com.microsoft.sqlserver:mssql-jdbc:12.4.2.jre11"
    implementation "com.zaxxer:HikariCP:5.1.0"
    implementation "io.netty:netty-all:4.1.104.Final"
    implementation "org.slf4j:slf4j-jdk14:2.0.11"
    implementation "com.google.inject:guice:$guiceVersion"
    implementation "com.google.inject.extensions:guice-servlet:$guiceVersion"
    implementation "org.owasp.encoder:encoder:1.2.3"
    implementation "org.glassfish:jakarta.json:2.0.1"
    implementation "com.sun.mail:jakarta.mail:2.0.1"
    implementation "org.eclipse.jetty:jetty-server:$jettyVersion"
    implementation "org.eclipse.jetty:jetty-servlet:$jettyVersion"
    implementation "org.eclipse.jetty:jetty-servlets:$jettyVersion"
    implementation "org.eclipse.jetty:jetty-webapp:$jettyVersion"
    implementation "org.eclipse.jetty:jetty-jndi:$jettyVersion"
    implementation "org.eclipse.jetty:jetty-proxy:$jettyVersion"
    implementation "org.eclipse.jetty.websocket:websocket-jetty-server:$jettyVersion"
    implementation "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    implementation "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
    implementation "org.glassfish.hk2:guice-bridge:3.0.5" // same version as jersey-hk2
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jakarta-jsonp:$jacksonVersion"
    implementation "org.liquibase:liquibase-core:4.23.2" // upgrade has issues
    implementation "org.apache.commons:commons-jexl3:3.3"
    implementation "org.jxls:jxls:$jxlsVersion"
    implementation "org.jxls:jxls-poi:$jxlsVersion"
    implementation "org.apache.velocity:velocity-engine-core:2.3"
    implementation "org.apache.velocity.tools:velocity-tools-generic:3.1"
    implementation "org.apache.commons:commons-collections4:4.4"
    implementation "org.mnode.ical4j:ical4j:3.2.14"
    implementation "org.locationtech.spatial4j:spatial4j:0.8"
    implementation "org.locationtech.jts:jts-core:1.19.0"
    implementation "net.java.dev.jna:jna-platform:5.14.0"
    implementation "com.github.jnr:jnr-posix:3.1.18"
    implementation "com.google.protobuf:protobuf-java:$protobufVersion"
    implementation "com.amazonaws:aws-java-sdk-sns:1.12.636"
    implementation "org.apache.kafka:kafka-clients:3.6.1"
    implementation "com.hivemq:hivemq-mqtt-client:1.3.3"
    implementation "redis.clients:jedis:5.1.0"
    implementation "com.google.firebase:firebase-admin:9.2.0"
    implementation "com.nimbusds:oauth2-oidc-sdk:11.9.1"
    implementation "com.rabbitmq:amqp-client:5.20.0"
    implementation "com.warrenstrange:googleauth:1.5.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.mockito:mockito-core:5.8.0"
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                "Main-Class": javaMainClass,
                "Implementation-Version": version,
                "Class-Path": configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(" "))
    }
}

configurations {
    runtimeLib.extendsFrom implementation
}

liquibase {
    activities {
        main {
            changelogFile "./schema/changelog-master.xml"
            url "${liquibaseDbUrl}"
            username "${liquibaseUser}"
            password "${liquibasePass}"
        }
    }
}

tasks.withType(Tar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Zip) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
}

distributions {
    main {
        distributionBaseName = 'tensortrack'
        contents {
            from jar
            into('lib') {
                from configurations.runtimeLib
            }
            into('schema') {
                from 'schema'
            }
           into('templates') {
                from 'templates'
            }
           into('legacy') {
                from "${project.rootDir}/traccar-web/web"
            }
           into('modern') {
                from "${project.rootDir}/traccar-web/modern/build/"
            }
           into('conf') {
                from 'conf/default.xml'
            }
           into('conf') {
                from 'conf/prod/traccar.xml'
            }
           into('conf') {
                from 'conf/README.md'
            }
        }
    }
}

// publishing {
//     publications {
//         distribution(MavenPublication) {
//             groupId 'org.traccar'
//             artifactId 'traccar'
//             version version
//             artifact (distZip) {}
//         }
//     }
//     repositories {
//         maven {
//             credentials {
//                 username "${mvnUsername}"
//                 password "${mvnPassword}"
//             }
//             url mvnRepo
//             allowInsecureProtocol false
//         }
//     }
// }
